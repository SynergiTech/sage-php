<?php
/**
 * PutInvoiceSettingsInvoiceSettings
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Sage One - Accounts - v3 UKI
 *
 * Documentation of the Sage Business Cloud Accounting API.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * PutInvoiceSettingsInvoiceSettings Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PutInvoiceSettingsInvoiceSettings implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'putInvoiceSettings_invoice_settings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'next_invoice_number' => 'int',
        'next_credit_note_number' => 'int',
        'separate_invoice_credit_note_numbering' => 'bool',
        'sales_invoice_number_prefix' => 'string',
        'sales_credit_note_number_prefix' => 'string',
        'invoice_terms_and_conditions' => 'string',
        'default_note_on_invoice' => 'string',
        'default_note_on_credit_note' => 'string',
        'default_note_on_estimate' => 'string',
        'default_note_on_quote' => 'string',
        'next_quote_number' => 'int',
        'quote_number_prefix' => 'string',
        'estimate_number_prefix' => 'string',
        'quote_default_days_to_expiry' => 'int',
        'estimate_default_days_to_expiry' => 'int',
        'quote_terms_and_conditions' => 'string',
        'estimate_terms_and_conditions' => 'string',
        'delivery_note_terms_and_conditions' => 'string',
        'delivery_note_show_signature' => 'bool',
        'delivery_note_show_picked' => 'bool',
        'delivery_note_show_notes' => 'bool',
        'delivery_note_show_contact_details' => 'bool',
        'quick_entry_prefix' => 'string',
        'late_payment_percentage' => 'double',
        'prompt_payment_percentage' => 'double',
        'show_auto_entrepreneur' => 'bool',
        'show_insurance' => 'bool',
        'insurer_id' => 'string',
        'insurance_area' => 'string',
        'insurance_type' => 'string',
        'insurance_text' => 'string',
        'payment_bank_account_id' => 'string',
        'sales_corrective_invoice_number_prefix' => 'string',
        'next_sales_corrective_invoice_number' => 'int',
        'customer_credit_days' => 'int',
        'vendor_credit_days' => 'int',
        'document_headings' => '\Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsDocumentHeadings',
        'line_item_titles' => '\Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsLineItemTitles',
        'footer_details' => '\Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsFooterDetails',
        'print_contact_details' => '\Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsPrintContactDetails',
        'print_statements' => '\Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsPrintStatements'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'next_invoice_number' => 'int32',
        'next_credit_note_number' => 'int32',
        'separate_invoice_credit_note_numbering' => null,
        'sales_invoice_number_prefix' => null,
        'sales_credit_note_number_prefix' => null,
        'invoice_terms_and_conditions' => null,
        'default_note_on_invoice' => null,
        'default_note_on_credit_note' => null,
        'default_note_on_estimate' => null,
        'default_note_on_quote' => null,
        'next_quote_number' => 'int32',
        'quote_number_prefix' => null,
        'estimate_number_prefix' => null,
        'quote_default_days_to_expiry' => 'int32',
        'estimate_default_days_to_expiry' => 'int32',
        'quote_terms_and_conditions' => null,
        'estimate_terms_and_conditions' => null,
        'delivery_note_terms_and_conditions' => null,
        'delivery_note_show_signature' => null,
        'delivery_note_show_picked' => null,
        'delivery_note_show_notes' => null,
        'delivery_note_show_contact_details' => null,
        'quick_entry_prefix' => null,
        'late_payment_percentage' => 'double',
        'prompt_payment_percentage' => 'double',
        'show_auto_entrepreneur' => null,
        'show_insurance' => null,
        'insurer_id' => null,
        'insurance_area' => null,
        'insurance_type' => null,
        'insurance_text' => null,
        'payment_bank_account_id' => null,
        'sales_corrective_invoice_number_prefix' => null,
        'next_sales_corrective_invoice_number' => 'int32',
        'customer_credit_days' => 'int32',
        'vendor_credit_days' => 'int32',
        'document_headings' => null,
        'line_item_titles' => null,
        'footer_details' => null,
        'print_contact_details' => null,
        'print_statements' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'next_invoice_number' => 'next_invoice_number',
        'next_credit_note_number' => 'next_credit_note_number',
        'separate_invoice_credit_note_numbering' => 'separate_invoice_credit_note_numbering',
        'sales_invoice_number_prefix' => 'sales_invoice_number_prefix',
        'sales_credit_note_number_prefix' => 'sales_credit_note_number_prefix',
        'invoice_terms_and_conditions' => 'invoice_terms_and_conditions',
        'default_note_on_invoice' => 'default_note_on_invoice',
        'default_note_on_credit_note' => 'default_note_on_credit_note',
        'default_note_on_estimate' => 'default_note_on_estimate',
        'default_note_on_quote' => 'default_note_on_quote',
        'next_quote_number' => 'next_quote_number',
        'quote_number_prefix' => 'quote_number_prefix',
        'estimate_number_prefix' => 'estimate_number_prefix',
        'quote_default_days_to_expiry' => 'quote_default_days_to_expiry',
        'estimate_default_days_to_expiry' => 'estimate_default_days_to_expiry',
        'quote_terms_and_conditions' => 'quote_terms_and_conditions',
        'estimate_terms_and_conditions' => 'estimate_terms_and_conditions',
        'delivery_note_terms_and_conditions' => 'delivery_note_terms_and_conditions',
        'delivery_note_show_signature' => 'delivery_note_show_signature',
        'delivery_note_show_picked' => 'delivery_note_show_picked',
        'delivery_note_show_notes' => 'delivery_note_show_notes',
        'delivery_note_show_contact_details' => 'delivery_note_show_contact_details',
        'quick_entry_prefix' => 'quick_entry_prefix',
        'late_payment_percentage' => 'late_payment_percentage',
        'prompt_payment_percentage' => 'prompt_payment_percentage',
        'show_auto_entrepreneur' => 'show_auto_entrepreneur',
        'show_insurance' => 'show_insurance',
        'insurer_id' => 'insurer_id',
        'insurance_area' => 'insurance_area',
        'insurance_type' => 'insurance_type',
        'insurance_text' => 'insurance_text',
        'payment_bank_account_id' => 'payment_bank_account_id',
        'sales_corrective_invoice_number_prefix' => 'sales_corrective_invoice_number_prefix',
        'next_sales_corrective_invoice_number' => 'next_sales_corrective_invoice_number',
        'customer_credit_days' => 'customer_credit_days',
        'vendor_credit_days' => 'vendor_credit_days',
        'document_headings' => 'document_headings',
        'line_item_titles' => 'line_item_titles',
        'footer_details' => 'footer_details',
        'print_contact_details' => 'print_contact_details',
        'print_statements' => 'print_statements'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'next_invoice_number' => 'setNextInvoiceNumber',
        'next_credit_note_number' => 'setNextCreditNoteNumber',
        'separate_invoice_credit_note_numbering' => 'setSeparateInvoiceCreditNoteNumbering',
        'sales_invoice_number_prefix' => 'setSalesInvoiceNumberPrefix',
        'sales_credit_note_number_prefix' => 'setSalesCreditNoteNumberPrefix',
        'invoice_terms_and_conditions' => 'setInvoiceTermsAndConditions',
        'default_note_on_invoice' => 'setDefaultNoteOnInvoice',
        'default_note_on_credit_note' => 'setDefaultNoteOnCreditNote',
        'default_note_on_estimate' => 'setDefaultNoteOnEstimate',
        'default_note_on_quote' => 'setDefaultNoteOnQuote',
        'next_quote_number' => 'setNextQuoteNumber',
        'quote_number_prefix' => 'setQuoteNumberPrefix',
        'estimate_number_prefix' => 'setEstimateNumberPrefix',
        'quote_default_days_to_expiry' => 'setQuoteDefaultDaysToExpiry',
        'estimate_default_days_to_expiry' => 'setEstimateDefaultDaysToExpiry',
        'quote_terms_and_conditions' => 'setQuoteTermsAndConditions',
        'estimate_terms_and_conditions' => 'setEstimateTermsAndConditions',
        'delivery_note_terms_and_conditions' => 'setDeliveryNoteTermsAndConditions',
        'delivery_note_show_signature' => 'setDeliveryNoteShowSignature',
        'delivery_note_show_picked' => 'setDeliveryNoteShowPicked',
        'delivery_note_show_notes' => 'setDeliveryNoteShowNotes',
        'delivery_note_show_contact_details' => 'setDeliveryNoteShowContactDetails',
        'quick_entry_prefix' => 'setQuickEntryPrefix',
        'late_payment_percentage' => 'setLatePaymentPercentage',
        'prompt_payment_percentage' => 'setPromptPaymentPercentage',
        'show_auto_entrepreneur' => 'setShowAutoEntrepreneur',
        'show_insurance' => 'setShowInsurance',
        'insurer_id' => 'setInsurerId',
        'insurance_area' => 'setInsuranceArea',
        'insurance_type' => 'setInsuranceType',
        'insurance_text' => 'setInsuranceText',
        'payment_bank_account_id' => 'setPaymentBankAccountId',
        'sales_corrective_invoice_number_prefix' => 'setSalesCorrectiveInvoiceNumberPrefix',
        'next_sales_corrective_invoice_number' => 'setNextSalesCorrectiveInvoiceNumber',
        'customer_credit_days' => 'setCustomerCreditDays',
        'vendor_credit_days' => 'setVendorCreditDays',
        'document_headings' => 'setDocumentHeadings',
        'line_item_titles' => 'setLineItemTitles',
        'footer_details' => 'setFooterDetails',
        'print_contact_details' => 'setPrintContactDetails',
        'print_statements' => 'setPrintStatements'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'next_invoice_number' => 'getNextInvoiceNumber',
        'next_credit_note_number' => 'getNextCreditNoteNumber',
        'separate_invoice_credit_note_numbering' => 'getSeparateInvoiceCreditNoteNumbering',
        'sales_invoice_number_prefix' => 'getSalesInvoiceNumberPrefix',
        'sales_credit_note_number_prefix' => 'getSalesCreditNoteNumberPrefix',
        'invoice_terms_and_conditions' => 'getInvoiceTermsAndConditions',
        'default_note_on_invoice' => 'getDefaultNoteOnInvoice',
        'default_note_on_credit_note' => 'getDefaultNoteOnCreditNote',
        'default_note_on_estimate' => 'getDefaultNoteOnEstimate',
        'default_note_on_quote' => 'getDefaultNoteOnQuote',
        'next_quote_number' => 'getNextQuoteNumber',
        'quote_number_prefix' => 'getQuoteNumberPrefix',
        'estimate_number_prefix' => 'getEstimateNumberPrefix',
        'quote_default_days_to_expiry' => 'getQuoteDefaultDaysToExpiry',
        'estimate_default_days_to_expiry' => 'getEstimateDefaultDaysToExpiry',
        'quote_terms_and_conditions' => 'getQuoteTermsAndConditions',
        'estimate_terms_and_conditions' => 'getEstimateTermsAndConditions',
        'delivery_note_terms_and_conditions' => 'getDeliveryNoteTermsAndConditions',
        'delivery_note_show_signature' => 'getDeliveryNoteShowSignature',
        'delivery_note_show_picked' => 'getDeliveryNoteShowPicked',
        'delivery_note_show_notes' => 'getDeliveryNoteShowNotes',
        'delivery_note_show_contact_details' => 'getDeliveryNoteShowContactDetails',
        'quick_entry_prefix' => 'getQuickEntryPrefix',
        'late_payment_percentage' => 'getLatePaymentPercentage',
        'prompt_payment_percentage' => 'getPromptPaymentPercentage',
        'show_auto_entrepreneur' => 'getShowAutoEntrepreneur',
        'show_insurance' => 'getShowInsurance',
        'insurer_id' => 'getInsurerId',
        'insurance_area' => 'getInsuranceArea',
        'insurance_type' => 'getInsuranceType',
        'insurance_text' => 'getInsuranceText',
        'payment_bank_account_id' => 'getPaymentBankAccountId',
        'sales_corrective_invoice_number_prefix' => 'getSalesCorrectiveInvoiceNumberPrefix',
        'next_sales_corrective_invoice_number' => 'getNextSalesCorrectiveInvoiceNumber',
        'customer_credit_days' => 'getCustomerCreditDays',
        'vendor_credit_days' => 'getVendorCreditDays',
        'document_headings' => 'getDocumentHeadings',
        'line_item_titles' => 'getLineItemTitles',
        'footer_details' => 'getFooterDetails',
        'print_contact_details' => 'getPrintContactDetails',
        'print_statements' => 'getPrintStatements'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['next_invoice_number'] = isset($data['next_invoice_number']) ? $data['next_invoice_number'] : null;
        $this->container['next_credit_note_number'] = isset($data['next_credit_note_number']) ? $data['next_credit_note_number'] : null;
        $this->container['separate_invoice_credit_note_numbering'] = isset($data['separate_invoice_credit_note_numbering']) ? $data['separate_invoice_credit_note_numbering'] : null;
        $this->container['sales_invoice_number_prefix'] = isset($data['sales_invoice_number_prefix']) ? $data['sales_invoice_number_prefix'] : null;
        $this->container['sales_credit_note_number_prefix'] = isset($data['sales_credit_note_number_prefix']) ? $data['sales_credit_note_number_prefix'] : null;
        $this->container['invoice_terms_and_conditions'] = isset($data['invoice_terms_and_conditions']) ? $data['invoice_terms_and_conditions'] : null;
        $this->container['default_note_on_invoice'] = isset($data['default_note_on_invoice']) ? $data['default_note_on_invoice'] : null;
        $this->container['default_note_on_credit_note'] = isset($data['default_note_on_credit_note']) ? $data['default_note_on_credit_note'] : null;
        $this->container['default_note_on_estimate'] = isset($data['default_note_on_estimate']) ? $data['default_note_on_estimate'] : null;
        $this->container['default_note_on_quote'] = isset($data['default_note_on_quote']) ? $data['default_note_on_quote'] : null;
        $this->container['next_quote_number'] = isset($data['next_quote_number']) ? $data['next_quote_number'] : null;
        $this->container['quote_number_prefix'] = isset($data['quote_number_prefix']) ? $data['quote_number_prefix'] : null;
        $this->container['estimate_number_prefix'] = isset($data['estimate_number_prefix']) ? $data['estimate_number_prefix'] : null;
        $this->container['quote_default_days_to_expiry'] = isset($data['quote_default_days_to_expiry']) ? $data['quote_default_days_to_expiry'] : null;
        $this->container['estimate_default_days_to_expiry'] = isset($data['estimate_default_days_to_expiry']) ? $data['estimate_default_days_to_expiry'] : null;
        $this->container['quote_terms_and_conditions'] = isset($data['quote_terms_and_conditions']) ? $data['quote_terms_and_conditions'] : null;
        $this->container['estimate_terms_and_conditions'] = isset($data['estimate_terms_and_conditions']) ? $data['estimate_terms_and_conditions'] : null;
        $this->container['delivery_note_terms_and_conditions'] = isset($data['delivery_note_terms_and_conditions']) ? $data['delivery_note_terms_and_conditions'] : null;
        $this->container['delivery_note_show_signature'] = isset($data['delivery_note_show_signature']) ? $data['delivery_note_show_signature'] : null;
        $this->container['delivery_note_show_picked'] = isset($data['delivery_note_show_picked']) ? $data['delivery_note_show_picked'] : null;
        $this->container['delivery_note_show_notes'] = isset($data['delivery_note_show_notes']) ? $data['delivery_note_show_notes'] : null;
        $this->container['delivery_note_show_contact_details'] = isset($data['delivery_note_show_contact_details']) ? $data['delivery_note_show_contact_details'] : null;
        $this->container['quick_entry_prefix'] = isset($data['quick_entry_prefix']) ? $data['quick_entry_prefix'] : null;
        $this->container['late_payment_percentage'] = isset($data['late_payment_percentage']) ? $data['late_payment_percentage'] : null;
        $this->container['prompt_payment_percentage'] = isset($data['prompt_payment_percentage']) ? $data['prompt_payment_percentage'] : null;
        $this->container['show_auto_entrepreneur'] = isset($data['show_auto_entrepreneur']) ? $data['show_auto_entrepreneur'] : null;
        $this->container['show_insurance'] = isset($data['show_insurance']) ? $data['show_insurance'] : null;
        $this->container['insurer_id'] = isset($data['insurer_id']) ? $data['insurer_id'] : null;
        $this->container['insurance_area'] = isset($data['insurance_area']) ? $data['insurance_area'] : null;
        $this->container['insurance_type'] = isset($data['insurance_type']) ? $data['insurance_type'] : null;
        $this->container['insurance_text'] = isset($data['insurance_text']) ? $data['insurance_text'] : null;
        $this->container['payment_bank_account_id'] = isset($data['payment_bank_account_id']) ? $data['payment_bank_account_id'] : null;
        $this->container['sales_corrective_invoice_number_prefix'] = isset($data['sales_corrective_invoice_number_prefix']) ? $data['sales_corrective_invoice_number_prefix'] : null;
        $this->container['next_sales_corrective_invoice_number'] = isset($data['next_sales_corrective_invoice_number']) ? $data['next_sales_corrective_invoice_number'] : null;
        $this->container['customer_credit_days'] = isset($data['customer_credit_days']) ? $data['customer_credit_days'] : null;
        $this->container['vendor_credit_days'] = isset($data['vendor_credit_days']) ? $data['vendor_credit_days'] : null;
        $this->container['document_headings'] = isset($data['document_headings']) ? $data['document_headings'] : null;
        $this->container['line_item_titles'] = isset($data['line_item_titles']) ? $data['line_item_titles'] : null;
        $this->container['footer_details'] = isset($data['footer_details']) ? $data['footer_details'] : null;
        $this->container['print_contact_details'] = isset($data['print_contact_details']) ? $data['print_contact_details'] : null;
        $this->container['print_statements'] = isset($data['print_statements']) ? $data['print_statements'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['next_invoice_number']) && ($this->container['next_invoice_number'] > 999999999)) {
            $invalidProperties[] = "invalid value for 'next_invoice_number', must be smaller than or equal to 999999999.";
        }

        if (!is_null($this->container['next_invoice_number']) && ($this->container['next_invoice_number'] < 1)) {
            $invalidProperties[] = "invalid value for 'next_invoice_number', must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['next_credit_note_number']) && ($this->container['next_credit_note_number'] > 999999999)) {
            $invalidProperties[] = "invalid value for 'next_credit_note_number', must be smaller than or equal to 999999999.";
        }

        if (!is_null($this->container['next_credit_note_number']) && ($this->container['next_credit_note_number'] < 1)) {
            $invalidProperties[] = "invalid value for 'next_credit_note_number', must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['next_quote_number']) && ($this->container['next_quote_number'] > 999999999)) {
            $invalidProperties[] = "invalid value for 'next_quote_number', must be smaller than or equal to 999999999.";
        }

        if (!is_null($this->container['next_quote_number']) && ($this->container['next_quote_number'] < 1)) {
            $invalidProperties[] = "invalid value for 'next_quote_number', must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['quote_default_days_to_expiry']) && ($this->container['quote_default_days_to_expiry'] > 365)) {
            $invalidProperties[] = "invalid value for 'quote_default_days_to_expiry', must be smaller than or equal to 365.";
        }

        if (!is_null($this->container['quote_default_days_to_expiry']) && ($this->container['quote_default_days_to_expiry'] < 0)) {
            $invalidProperties[] = "invalid value for 'quote_default_days_to_expiry', must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['estimate_default_days_to_expiry']) && ($this->container['estimate_default_days_to_expiry'] > 365)) {
            $invalidProperties[] = "invalid value for 'estimate_default_days_to_expiry', must be smaller than or equal to 365.";
        }

        if (!is_null($this->container['estimate_default_days_to_expiry']) && ($this->container['estimate_default_days_to_expiry'] < 0)) {
            $invalidProperties[] = "invalid value for 'estimate_default_days_to_expiry', must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['next_sales_corrective_invoice_number']) && ($this->container['next_sales_corrective_invoice_number'] > 2147483647)) {
            $invalidProperties[] = "invalid value for 'next_sales_corrective_invoice_number', must be smaller than or equal to 2147483647.";
        }

        if (!is_null($this->container['next_sales_corrective_invoice_number']) && ($this->container['next_sales_corrective_invoice_number'] < 1)) {
            $invalidProperties[] = "invalid value for 'next_sales_corrective_invoice_number', must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['customer_credit_days']) && ($this->container['customer_credit_days'] > 365)) {
            $invalidProperties[] = "invalid value for 'customer_credit_days', must be smaller than or equal to 365.";
        }

        if (!is_null($this->container['customer_credit_days']) && ($this->container['customer_credit_days'] < 0)) {
            $invalidProperties[] = "invalid value for 'customer_credit_days', must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['vendor_credit_days']) && ($this->container['vendor_credit_days'] > 365)) {
            $invalidProperties[] = "invalid value for 'vendor_credit_days', must be smaller than or equal to 365.";
        }

        if (!is_null($this->container['vendor_credit_days']) && ($this->container['vendor_credit_days'] < 0)) {
            $invalidProperties[] = "invalid value for 'vendor_credit_days', must be bigger than or equal to 0.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets next_invoice_number
     *
     * @return int
     */
    public function getNextInvoiceNumber()
    {
        return $this->container['next_invoice_number'];
    }

    /**
     * Sets next_invoice_number
     *
     * @param int $next_invoice_number The next invoice number
     *
     * @return $this
     */
    public function setNextInvoiceNumber($next_invoice_number)
    {

        if (!is_null($next_invoice_number) && ($next_invoice_number > 999999999)) {
            throw new \InvalidArgumentException('invalid value for $next_invoice_number when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 999999999.');
        }
        if (!is_null($next_invoice_number) && ($next_invoice_number < 1)) {
            throw new \InvalidArgumentException('invalid value for $next_invoice_number when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 1.');
        }

        $this->container['next_invoice_number'] = $next_invoice_number;

        return $this;
    }

    /**
     * Gets next_credit_note_number
     *
     * @return int
     */
    public function getNextCreditNoteNumber()
    {
        return $this->container['next_credit_note_number'];
    }

    /**
     * Sets next_credit_note_number
     *
     * @param int $next_credit_note_number The next credit note number
     *
     * @return $this
     */
    public function setNextCreditNoteNumber($next_credit_note_number)
    {

        if (!is_null($next_credit_note_number) && ($next_credit_note_number > 999999999)) {
            throw new \InvalidArgumentException('invalid value for $next_credit_note_number when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 999999999.');
        }
        if (!is_null($next_credit_note_number) && ($next_credit_note_number < 1)) {
            throw new \InvalidArgumentException('invalid value for $next_credit_note_number when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 1.');
        }

        $this->container['next_credit_note_number'] = $next_credit_note_number;

        return $this;
    }

    /**
     * Gets separate_invoice_credit_note_numbering
     *
     * @return bool
     */
    public function getSeparateInvoiceCreditNoteNumbering()
    {
        return $this->container['separate_invoice_credit_note_numbering'];
    }

    /**
     * Sets separate_invoice_credit_note_numbering
     *
     * @param bool $separate_invoice_credit_note_numbering Indicates whether to use separate or combined number sequences for invoices and credit notes
     *
     * @return $this
     */
    public function setSeparateInvoiceCreditNoteNumbering($separate_invoice_credit_note_numbering)
    {
        $this->container['separate_invoice_credit_note_numbering'] = $separate_invoice_credit_note_numbering;

        return $this;
    }

    /**
     * Gets sales_invoice_number_prefix
     *
     * @return string
     */
    public function getSalesInvoiceNumberPrefix()
    {
        return $this->container['sales_invoice_number_prefix'];
    }

    /**
     * Sets sales_invoice_number_prefix
     *
     * @param string $sales_invoice_number_prefix The prefix to use for sales invoices
     *
     * @return $this
     */
    public function setSalesInvoiceNumberPrefix($sales_invoice_number_prefix)
    {
        $this->container['sales_invoice_number_prefix'] = $sales_invoice_number_prefix;

        return $this;
    }

    /**
     * Gets sales_credit_note_number_prefix
     *
     * @return string
     */
    public function getSalesCreditNoteNumberPrefix()
    {
        return $this->container['sales_credit_note_number_prefix'];
    }

    /**
     * Sets sales_credit_note_number_prefix
     *
     * @param string $sales_credit_note_number_prefix The prefix to use for sales credit notes
     *
     * @return $this
     */
    public function setSalesCreditNoteNumberPrefix($sales_credit_note_number_prefix)
    {
        $this->container['sales_credit_note_number_prefix'] = $sales_credit_note_number_prefix;

        return $this;
    }

    /**
     * Gets invoice_terms_and_conditions
     *
     * @return string
     */
    public function getInvoiceTermsAndConditions()
    {
        return $this->container['invoice_terms_and_conditions'];
    }

    /**
     * Sets invoice_terms_and_conditions
     *
     * @param string $invoice_terms_and_conditions The default terms and conditions to include on invoices
     *
     * @return $this
     */
    public function setInvoiceTermsAndConditions($invoice_terms_and_conditions)
    {
        $this->container['invoice_terms_and_conditions'] = $invoice_terms_and_conditions;

        return $this;
    }

    /**
     * Gets default_note_on_invoice
     *
     * @return string
     */
    public function getDefaultNoteOnInvoice()
    {
        return $this->container['default_note_on_invoice'];
    }

    /**
     * Sets default_note_on_invoice
     *
     * @param string $default_note_on_invoice The default notes to include on invoices
     *
     * @return $this
     */
    public function setDefaultNoteOnInvoice($default_note_on_invoice)
    {
        $this->container['default_note_on_invoice'] = $default_note_on_invoice;

        return $this;
    }

    /**
     * Gets default_note_on_credit_note
     *
     * @return string
     */
    public function getDefaultNoteOnCreditNote()
    {
        return $this->container['default_note_on_credit_note'];
    }

    /**
     * Sets default_note_on_credit_note
     *
     * @param string $default_note_on_credit_note The default notes to include on credit notes
     *
     * @return $this
     */
    public function setDefaultNoteOnCreditNote($default_note_on_credit_note)
    {
        $this->container['default_note_on_credit_note'] = $default_note_on_credit_note;

        return $this;
    }

    /**
     * Gets default_note_on_estimate
     *
     * @return string
     */
    public function getDefaultNoteOnEstimate()
    {
        return $this->container['default_note_on_estimate'];
    }

    /**
     * Sets default_note_on_estimate
     *
     * @param string $default_note_on_estimate The default notes to include on estimates
     *
     * @return $this
     */
    public function setDefaultNoteOnEstimate($default_note_on_estimate)
    {
        $this->container['default_note_on_estimate'] = $default_note_on_estimate;

        return $this;
    }

    /**
     * Gets default_note_on_quote
     *
     * @return string
     */
    public function getDefaultNoteOnQuote()
    {
        return $this->container['default_note_on_quote'];
    }

    /**
     * Sets default_note_on_quote
     *
     * @param string $default_note_on_quote The default notes to include on quotes
     *
     * @return $this
     */
    public function setDefaultNoteOnQuote($default_note_on_quote)
    {
        $this->container['default_note_on_quote'] = $default_note_on_quote;

        return $this;
    }

    /**
     * Gets next_quote_number
     *
     * @return int
     */
    public function getNextQuoteNumber()
    {
        return $this->container['next_quote_number'];
    }

    /**
     * Sets next_quote_number
     *
     * @param int $next_quote_number The next quote number
     *
     * @return $this
     */
    public function setNextQuoteNumber($next_quote_number)
    {

        if (!is_null($next_quote_number) && ($next_quote_number > 999999999)) {
            throw new \InvalidArgumentException('invalid value for $next_quote_number when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 999999999.');
        }
        if (!is_null($next_quote_number) && ($next_quote_number < 1)) {
            throw new \InvalidArgumentException('invalid value for $next_quote_number when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 1.');
        }

        $this->container['next_quote_number'] = $next_quote_number;

        return $this;
    }

    /**
     * Gets quote_number_prefix
     *
     * @return string
     */
    public function getQuoteNumberPrefix()
    {
        return $this->container['quote_number_prefix'];
    }

    /**
     * Sets quote_number_prefix
     *
     * @param string $quote_number_prefix The prefix to use for sales quotes
     *
     * @return $this
     */
    public function setQuoteNumberPrefix($quote_number_prefix)
    {
        $this->container['quote_number_prefix'] = $quote_number_prefix;

        return $this;
    }

    /**
     * Gets estimate_number_prefix
     *
     * @return string
     */
    public function getEstimateNumberPrefix()
    {
        return $this->container['estimate_number_prefix'];
    }

    /**
     * Sets estimate_number_prefix
     *
     * @param string $estimate_number_prefix The prefix to use for sales estimates
     *
     * @return $this
     */
    public function setEstimateNumberPrefix($estimate_number_prefix)
    {
        $this->container['estimate_number_prefix'] = $estimate_number_prefix;

        return $this;
    }

    /**
     * Gets quote_default_days_to_expiry
     *
     * @return int
     */
    public function getQuoteDefaultDaysToExpiry()
    {
        return $this->container['quote_default_days_to_expiry'];
    }

    /**
     * Sets quote_default_days_to_expiry
     *
     * @param int $quote_default_days_to_expiry The default number of days before quotes expire
     *
     * @return $this
     */
    public function setQuoteDefaultDaysToExpiry($quote_default_days_to_expiry)
    {

        if (!is_null($quote_default_days_to_expiry) && ($quote_default_days_to_expiry > 365)) {
            throw new \InvalidArgumentException('invalid value for $quote_default_days_to_expiry when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 365.');
        }
        if (!is_null($quote_default_days_to_expiry) && ($quote_default_days_to_expiry < 0)) {
            throw new \InvalidArgumentException('invalid value for $quote_default_days_to_expiry when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 0.');
        }

        $this->container['quote_default_days_to_expiry'] = $quote_default_days_to_expiry;

        return $this;
    }

    /**
     * Gets estimate_default_days_to_expiry
     *
     * @return int
     */
    public function getEstimateDefaultDaysToExpiry()
    {
        return $this->container['estimate_default_days_to_expiry'];
    }

    /**
     * Sets estimate_default_days_to_expiry
     *
     * @param int $estimate_default_days_to_expiry The default number of days before estimates expire
     *
     * @return $this
     */
    public function setEstimateDefaultDaysToExpiry($estimate_default_days_to_expiry)
    {

        if (!is_null($estimate_default_days_to_expiry) && ($estimate_default_days_to_expiry > 365)) {
            throw new \InvalidArgumentException('invalid value for $estimate_default_days_to_expiry when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 365.');
        }
        if (!is_null($estimate_default_days_to_expiry) && ($estimate_default_days_to_expiry < 0)) {
            throw new \InvalidArgumentException('invalid value for $estimate_default_days_to_expiry when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 0.');
        }

        $this->container['estimate_default_days_to_expiry'] = $estimate_default_days_to_expiry;

        return $this;
    }

    /**
     * Gets quote_terms_and_conditions
     *
     * @return string
     */
    public function getQuoteTermsAndConditions()
    {
        return $this->container['quote_terms_and_conditions'];
    }

    /**
     * Sets quote_terms_and_conditions
     *
     * @param string $quote_terms_and_conditions The default terms and conditions to include on quotes
     *
     * @return $this
     */
    public function setQuoteTermsAndConditions($quote_terms_and_conditions)
    {
        $this->container['quote_terms_and_conditions'] = $quote_terms_and_conditions;

        return $this;
    }

    /**
     * Gets estimate_terms_and_conditions
     *
     * @return string
     */
    public function getEstimateTermsAndConditions()
    {
        return $this->container['estimate_terms_and_conditions'];
    }

    /**
     * Sets estimate_terms_and_conditions
     *
     * @param string $estimate_terms_and_conditions The default terms and conditions to include on estimates
     *
     * @return $this
     */
    public function setEstimateTermsAndConditions($estimate_terms_and_conditions)
    {
        $this->container['estimate_terms_and_conditions'] = $estimate_terms_and_conditions;

        return $this;
    }

    /**
     * Gets delivery_note_terms_and_conditions
     *
     * @return string
     */
    public function getDeliveryNoteTermsAndConditions()
    {
        return $this->container['delivery_note_terms_and_conditions'];
    }

    /**
     * Sets delivery_note_terms_and_conditions
     *
     * @param string $delivery_note_terms_and_conditions The default terms and conditions to include on delivery notes
     *
     * @return $this
     */
    public function setDeliveryNoteTermsAndConditions($delivery_note_terms_and_conditions)
    {
        $this->container['delivery_note_terms_and_conditions'] = $delivery_note_terms_and_conditions;

        return $this;
    }

    /**
     * Gets delivery_note_show_signature
     *
     * @return bool
     */
    public function getDeliveryNoteShowSignature()
    {
        return $this->container['delivery_note_show_signature'];
    }

    /**
     * Sets delivery_note_show_signature
     *
     * @param bool $delivery_note_show_signature Indicates whether to include the signature lines on delivery notes
     *
     * @return $this
     */
    public function setDeliveryNoteShowSignature($delivery_note_show_signature)
    {
        $this->container['delivery_note_show_signature'] = $delivery_note_show_signature;

        return $this;
    }

    /**
     * Gets delivery_note_show_picked
     *
     * @return bool
     */
    public function getDeliveryNoteShowPicked()
    {
        return $this->container['delivery_note_show_picked'];
    }

    /**
     * Sets delivery_note_show_picked
     *
     * @param bool $delivery_note_show_picked Indicates whether to include the picked column on delivery notes
     *
     * @return $this
     */
    public function setDeliveryNoteShowPicked($delivery_note_show_picked)
    {
        $this->container['delivery_note_show_picked'] = $delivery_note_show_picked;

        return $this;
    }

    /**
     * Gets delivery_note_show_notes
     *
     * @return bool
     */
    public function getDeliveryNoteShowNotes()
    {
        return $this->container['delivery_note_show_notes'];
    }

    /**
     * Sets delivery_note_show_notes
     *
     * @param bool $delivery_note_show_notes Indicates whether to include the document notes on delivery notes
     *
     * @return $this
     */
    public function setDeliveryNoteShowNotes($delivery_note_show_notes)
    {
        $this->container['delivery_note_show_notes'] = $delivery_note_show_notes;

        return $this;
    }

    /**
     * Gets delivery_note_show_contact_details
     *
     * @return bool
     */
    public function getDeliveryNoteShowContactDetails()
    {
        return $this->container['delivery_note_show_contact_details'];
    }

    /**
     * Sets delivery_note_show_contact_details
     *
     * @param bool $delivery_note_show_contact_details Indicates whether to include contact details on delivery notes
     *
     * @return $this
     */
    public function setDeliveryNoteShowContactDetails($delivery_note_show_contact_details)
    {
        $this->container['delivery_note_show_contact_details'] = $delivery_note_show_contact_details;

        return $this;
    }

    /**
     * Gets quick_entry_prefix
     *
     * @return string
     */
    public function getQuickEntryPrefix()
    {
        return $this->container['quick_entry_prefix'];
    }

    /**
     * Sets quick_entry_prefix
     *
     * @param string $quick_entry_prefix The prefix to use for quick entries
     *
     * @return $this
     */
    public function setQuickEntryPrefix($quick_entry_prefix)
    {
        $this->container['quick_entry_prefix'] = $quick_entry_prefix;

        return $this;
    }

    /**
     * Gets late_payment_percentage
     *
     * @return double
     */
    public function getLatePaymentPercentage()
    {
        return $this->container['late_payment_percentage'];
    }

    /**
     * Sets late_payment_percentage
     *
     * @param double $late_payment_percentage The percentage charge applied to late payment of invoices (France only)
     *
     * @return $this
     */
    public function setLatePaymentPercentage($late_payment_percentage)
    {
        $this->container['late_payment_percentage'] = $late_payment_percentage;

        return $this;
    }

    /**
     * Gets prompt_payment_percentage
     *
     * @return double
     */
    public function getPromptPaymentPercentage()
    {
        return $this->container['prompt_payment_percentage'];
    }

    /**
     * Sets prompt_payment_percentage
     *
     * @param double $prompt_payment_percentage The percentage applied to late payment of invoices (France only)
     *
     * @return $this
     */
    public function setPromptPaymentPercentage($prompt_payment_percentage)
    {
        $this->container['prompt_payment_percentage'] = $prompt_payment_percentage;

        return $this;
    }

    /**
     * Gets show_auto_entrepreneur
     *
     * @return bool
     */
    public function getShowAutoEntrepreneur()
    {
        return $this->container['show_auto_entrepreneur'];
    }

    /**
     * Sets show_auto_entrepreneur
     *
     * @param bool $show_auto_entrepreneur Indicates whether to include auto entrepreneur details on invoices (France only)
     *
     * @return $this
     */
    public function setShowAutoEntrepreneur($show_auto_entrepreneur)
    {
        $this->container['show_auto_entrepreneur'] = $show_auto_entrepreneur;

        return $this;
    }

    /**
     * Gets show_insurance
     *
     * @return bool
     */
    public function getShowInsurance()
    {
        return $this->container['show_insurance'];
    }

    /**
     * Sets show_insurance
     *
     * @param bool $show_insurance Indicates whether to include insurance details on invoices (France only)
     *
     * @return $this
     */
    public function setShowInsurance($show_insurance)
    {
        $this->container['show_insurance'] = $show_insurance;

        return $this;
    }

    /**
     * Gets insurer_id
     *
     * @return string
     */
    public function getInsurerId()
    {
        return $this->container['insurer_id'];
    }

    /**
     * Sets insurer_id
     *
     * @param string $insurer_id The ID of the Insurer. (France only)
     *
     * @return $this
     */
    public function setInsurerId($insurer_id)
    {
        $this->container['insurer_id'] = $insurer_id;

        return $this;
    }

    /**
     * Gets insurance_area
     *
     * @return string
     */
    public function getInsuranceArea()
    {
        return $this->container['insurance_area'];
    }

    /**
     * Sets insurance_area
     *
     * @param string $insurance_area The insurance area to be displayed on invoices (France only)
     *
     * @return $this
     */
    public function setInsuranceArea($insurance_area)
    {
        $this->container['insurance_area'] = $insurance_area;

        return $this;
    }

    /**
     * Gets insurance_type
     *
     * @return string
     */
    public function getInsuranceType()
    {
        return $this->container['insurance_type'];
    }

    /**
     * Sets insurance_type
     *
     * @param string $insurance_type The insurance type to be displayed on invoices (France only)
     *
     * @return $this
     */
    public function setInsuranceType($insurance_type)
    {
        $this->container['insurance_type'] = $insurance_type;

        return $this;
    }

    /**
     * Gets insurance_text
     *
     * @return string
     */
    public function getInsuranceText()
    {
        return $this->container['insurance_text'];
    }

    /**
     * Sets insurance_text
     *
     * @param string $insurance_text The insurance mention to be displayed on invoices (France only)
     *
     * @return $this
     */
    public function setInsuranceText($insurance_text)
    {
        $this->container['insurance_text'] = $insurance_text;

        return $this;
    }

    /**
     * Gets payment_bank_account_id
     *
     * @return string
     */
    public function getPaymentBankAccountId()
    {
        return $this->container['payment_bank_account_id'];
    }

    /**
     * Sets payment_bank_account_id
     *
     * @param string $payment_bank_account_id The ID of the Payment Bank Account.
     *
     * @return $this
     */
    public function setPaymentBankAccountId($payment_bank_account_id)
    {
        $this->container['payment_bank_account_id'] = $payment_bank_account_id;

        return $this;
    }

    /**
     * Gets sales_corrective_invoice_number_prefix
     *
     * @return string
     */
    public function getSalesCorrectiveInvoiceNumberPrefix()
    {
        return $this->container['sales_corrective_invoice_number_prefix'];
    }

    /**
     * Sets sales_corrective_invoice_number_prefix
     *
     * @param string $sales_corrective_invoice_number_prefix The sales corrective invoice number prefix (Spain only)
     *
     * @return $this
     */
    public function setSalesCorrectiveInvoiceNumberPrefix($sales_corrective_invoice_number_prefix)
    {
        $this->container['sales_corrective_invoice_number_prefix'] = $sales_corrective_invoice_number_prefix;

        return $this;
    }

    /**
     * Gets next_sales_corrective_invoice_number
     *
     * @return int
     */
    public function getNextSalesCorrectiveInvoiceNumber()
    {
        return $this->container['next_sales_corrective_invoice_number'];
    }

    /**
     * Sets next_sales_corrective_invoice_number
     *
     * @param int $next_sales_corrective_invoice_number The next sales corrective invoice number
     *
     * @return $this
     */
    public function setNextSalesCorrectiveInvoiceNumber($next_sales_corrective_invoice_number)
    {

        if (!is_null($next_sales_corrective_invoice_number) && ($next_sales_corrective_invoice_number > 2147483647)) {
            throw new \InvalidArgumentException('invalid value for $next_sales_corrective_invoice_number when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 2147483647.');
        }
        if (!is_null($next_sales_corrective_invoice_number) && ($next_sales_corrective_invoice_number < 1)) {
            throw new \InvalidArgumentException('invalid value for $next_sales_corrective_invoice_number when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 1.');
        }

        $this->container['next_sales_corrective_invoice_number'] = $next_sales_corrective_invoice_number;

        return $this;
    }

    /**
     * Gets customer_credit_days
     *
     * @return int
     */
    public function getCustomerCreditDays()
    {
        return $this->container['customer_credit_days'];
    }

    /**
     * Sets customer_credit_days
     *
     * @param int $customer_credit_days The default delay within which the business' customer has to pay an invoice Prefer the (customer) contact's attribute 'credit_days' over this setting to calculate an invoice's date of payment; only if null, use this as default.
     *
     * @return $this
     */
    public function setCustomerCreditDays($customer_credit_days)
    {

        if (!is_null($customer_credit_days) && ($customer_credit_days > 365)) {
            throw new \InvalidArgumentException('invalid value for $customer_credit_days when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 365.');
        }
        if (!is_null($customer_credit_days) && ($customer_credit_days < 0)) {
            throw new \InvalidArgumentException('invalid value for $customer_credit_days when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 0.');
        }

        $this->container['customer_credit_days'] = $customer_credit_days;

        return $this;
    }

    /**
     * Gets vendor_credit_days
     *
     * @return int
     */
    public function getVendorCreditDays()
    {
        return $this->container['vendor_credit_days'];
    }

    /**
     * Sets vendor_credit_days
     *
     * @param int $vendor_credit_days The default delay within which the business has to pay any vendor's invoice Prefer the specific (vendor) contact's attribute 'credit_days' over this setting; only if null, use this as default.
     *
     * @return $this
     */
    public function setVendorCreditDays($vendor_credit_days)
    {

        if (!is_null($vendor_credit_days) && ($vendor_credit_days > 365)) {
            throw new \InvalidArgumentException('invalid value for $vendor_credit_days when calling PutInvoiceSettingsInvoiceSettings., must be smaller than or equal to 365.');
        }
        if (!is_null($vendor_credit_days) && ($vendor_credit_days < 0)) {
            throw new \InvalidArgumentException('invalid value for $vendor_credit_days when calling PutInvoiceSettingsInvoiceSettings., must be bigger than or equal to 0.');
        }

        $this->container['vendor_credit_days'] = $vendor_credit_days;

        return $this;
    }

    /**
     * Gets document_headings
     *
     * @return \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsDocumentHeadings
     */
    public function getDocumentHeadings()
    {
        return $this->container['document_headings'];
    }

    /**
     * Sets document_headings
     *
     * @param \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsDocumentHeadings $document_headings document_headings
     *
     * @return $this
     */
    public function setDocumentHeadings($document_headings)
    {
        $this->container['document_headings'] = $document_headings;

        return $this;
    }

    /**
     * Gets line_item_titles
     *
     * @return \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsLineItemTitles
     */
    public function getLineItemTitles()
    {
        return $this->container['line_item_titles'];
    }

    /**
     * Sets line_item_titles
     *
     * @param \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsLineItemTitles $line_item_titles line_item_titles
     *
     * @return $this
     */
    public function setLineItemTitles($line_item_titles)
    {
        $this->container['line_item_titles'] = $line_item_titles;

        return $this;
    }

    /**
     * Gets footer_details
     *
     * @return \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsFooterDetails
     */
    public function getFooterDetails()
    {
        return $this->container['footer_details'];
    }

    /**
     * Sets footer_details
     *
     * @param \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsFooterDetails $footer_details footer_details
     *
     * @return $this
     */
    public function setFooterDetails($footer_details)
    {
        $this->container['footer_details'] = $footer_details;

        return $this;
    }

    /**
     * Gets print_contact_details
     *
     * @return \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsPrintContactDetails
     */
    public function getPrintContactDetails()
    {
        return $this->container['print_contact_details'];
    }

    /**
     * Sets print_contact_details
     *
     * @param \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsPrintContactDetails $print_contact_details print_contact_details
     *
     * @return $this
     */
    public function setPrintContactDetails($print_contact_details)
    {
        $this->container['print_contact_details'] = $print_contact_details;

        return $this;
    }

    /**
     * Gets print_statements
     *
     * @return \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsPrintStatements
     */
    public function getPrintStatements()
    {
        return $this->container['print_statements'];
    }

    /**
     * Sets print_statements
     *
     * @param \Swagger\Client\Model\PutInvoiceSettingsInvoiceSettingsPrintStatements $print_statements print_statements
     *
     * @return $this
     */
    public function setPrintStatements($print_statements)
    {
        $this->container['print_statements'] = $print_statements;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


